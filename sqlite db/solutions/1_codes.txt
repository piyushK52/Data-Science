>>sqlite3
>>.open reuters.db

a)
ELECT count(*) FROM (
   ...> SELECT *
   ...> FROM frequency x
   ...> WHERE x.docid="10398_txt_earn");

b)
SELECT count(*) FROM (
   ...> SELECT DISTINCT x.term
   ...> FROM frequency x
   ...> WHERE x.docid="10398_txt_earn" AND x.count=1);

c)
select count(*) from (
   ...> select term from Frequency where docid = '10398_txt_earn' and count = 1 UNION select term from Frequency where docid = '925_txt_trade' and count = 1);

d)
select count(*) from (
   ...> select DISTINCT docid from Frequency where term = 'law' OR term = 'legal');

e)
select sum(count) ,docid from Frequency group by docid having sum(count)>300 => gives the total number of words, we want the total number of terms

==> select count(*) from (
   ...> select docid,count(distinct term) as c from Frequency group by docid having c>300);

f)
select count(*) from (
   ...> select docid from Frequency where term= 'transactions' INTERSECT select docid from Frequency where term= 'world');

g)
select a.row_num, b.col_num, sum(a.value*b.value) from a, b where a.col_num = b.row_num group by a.row_num, b.col_num

h)
select a.docid, b.docid, sum(a.count*b.count) from frequency a, frequency b 
where a.term = b.term and a.docid = '10080_txt_crude' and b.docid = '17035_txt_earn'
group by a.docid, b.docid

i)
CREATE VIEW view_1 AS 

SELECT * FROM frequency

UNION

SELECT 'q' as docid, 'washington' as term, 1 as count 

UNION

SELECT 'q' as docid, 'taxes' as term, 1 as count

UNION 

SELECT 'q' as docid, 'treasury' as term, 1 as count;

select A.docid, B.docid, sum(A.count * B.count) as similarity 

from view_1  A, view_1 B 
where A.term = B.term and A.docid = 'q' and B.docid != 'q'

group by A.docid, B.docid

order by similarity desc limit 10;